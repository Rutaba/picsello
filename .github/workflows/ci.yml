name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.12.1' # Define the elixir version [required]
        otp-version: '22.3' # Define the OTP version [required]
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Set mix file hash
      id: set_vars
      run: |
        mix_hash="${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}"
        echo "::set-output name=mix_hash::$mix_hash"
    - name: Cache PLT files for Dialyzer
      id: cache-plt
      uses: actions/cache@v2
      with:
        path: |
          _build/dev/*.plt
          _build/dev/*.plt.hash
        key: plt-cache-${{ steps.set_vars.outputs.mix_hash }}
        restore-keys: |
          plt-cache-
    - name: Install dependencies
      run: mix deps.get
    - name: Run Credo
      run: MIX_ENV=test mix credo
    - name: Run Dialyzer
      run: mix dialyzer
    - name: Run tests
      run: mix test --trace --cover
    - name: Archive screenshots
      if: ${{failure()}}
      uses: actions/upload-artifact@v2
      with:
        name: screenshots
        path: |
          screenshots/*.png
