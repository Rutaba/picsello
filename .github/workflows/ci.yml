name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GOOGLE_APPLICATION_CREDENTIALS_JSON_BASE64: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON_BASE64 }}
  MSG_MINIMAL: ref,commit
  PACKAGES_CALCULATOR_COST_OF_LIVING_RANGE: 'Cost of Living Adjustments!A1:B51'
  PACKAGES_CALCULATOR_PRICES_RANGE: 'Sheet1!A1:E200'
  PACKAGES_CALCULATOR_SHEET_ID: '1o-jjICzCgevEyf4Kw5keOyTEu8IK5EgfOXfeV_lSMVI'
  PHOTO_PROCESSING_INPUT_TOPIC: 'projects/celtic-rite-323300/topics/stagging-photo-to-process'
  PHOTO_PROCESSING_OUTPUT_SUBSCRIPTION: 'projects/celtic-rite-323300/subscriptions/github-ci-processed-photos-sub'
  PHOTO_PROCESSING_OUTPUT_TOPIC: 'github-ci-processed-photos'
  PHOTO_STORAGE_BUCKET: 'picsello-staging'
  PUBLIC_BUCKET: 'test-profiles'
  SENDGRID_MARKETING_UNSUBSCRIBE_ID: '1234'
  SHELL: /usr/bin/bash
  SLACK_ICON_EMOJI: ':camera:'
  SLACK_MESSAGE: ${{github.event.workflow_run.html_url}}
  SLACK_USERNAME: Picsello CI
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: "Run tests_1-4"
      uses: ./.github/workflows/reusable_elixir.yml
      timeout-minutes: 45
      secrets: inherit
      with:
        partition: "1"
        partitions: "4"
    - name: "Run tests_2-4"
      uses: ./.github/workflows/reusable_elixir.yml
      timeout-minutes: 45
      secrets: inherit
      with:
        partition: "2"
        partitions: "4"
    - name: "Run tests_4-4"
      uses: ./.github/workflows/reusable_elixir.yml
      timeout-minutes: 45
      secrets: inherit
      with:
        partition: "3"
        partitions: "4"
    - name: "Run tests_4-4"
      uses: ./.github/workflows/reusable_elixir.yml
      timeout-minutes: 45
      secrets: inherit
      with:
        partition: "4"
        partitions: "4"
    - name: Notify slack of success
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: ':rocket: build passed :rocket:'
    - name: Notify slack of failure
      if: ${{failure()}}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: ':skull: build failed :skull:'
    - name: deploy to staging
      run: curl ${{ secrets.RENDER_TRIGGER_DEPLOY }}
